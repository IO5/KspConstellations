CONTRACT_TYPE
{
	sortKey = i

	name = KsoRelay
	group = RelayConstellations

	title = Place a kerbostationary relay above the KSC
	description = As awesome as the tracking station is, being at almost sea level limits its field of view. We started looking for a spot for a dish on the nearby mountain range before Wernher von Kerman barged into the room: 'This is not high enough, we are a space agency god damn it!'.\nApparently, a kerbostationary orbit is as high as it gets if we want a constant line of sight to the KSC. We managed to secure some funds, so we want you to place a strong relay in KSO directly above the Space Center.

	synopsis = Place a relay satellite in kerbostationary orbit above the KSC

	maxCompletions = 1
	maxSimultaneous = 1

	completedMessage = The relay is in position and working!

	prestige = Significant

	maxExpiry = 21

	targetBody = HomeWorld()

	notes = Required deltaV from Low @/targetBody Orbit: @/deltaV.Print() m/s \nDon't forget to leave some fuel for station-keeping!

	rewardScience = 0
	rewardReputation = @RelayConstellations:ksoBaseReputation
	rewardFunds = @RelayConstellations:ksoBaseFunds
	advanceFunds = @rewardFunds / 4
	failureReputation = @rewardReputation
	failureFunds = @advanceFunds

	REQUIREMENT
	{
		name = StockKerbin
		type = Expression
		title = The homeworld is good ol' Kerbin
		expression = HomeWorld().CanHaveSynchronousOrbit(0) && HomeWorld().Radius() == 600000
	}

	REQUIREMENT
	{
		name = Rendezvous
		type = Rendezvous
	}

	REQUIREMENT
	{
		name = TechResearched
		type = TechResearched

		part = RelayAntenna50
	}

	DATA
	{
		type = double
		sma = 3463334.0398701429

		sensitivity = 2 * Pow(@/sma, 1.5) / Pow(Max(1, @/targetBody.GM()), 0.5) // rate of change of sma in relation to orbital velocity
		multiple = Pow(10, Round(Log(@sensitivity, 10) - 0.5))
		coeff = Max(Round(@sensitivity, @multiple), 1000) // sensitivity rounded to a nice round number

		distSensitivity = 18.84955592153876 * Pow(@/sma, 1.5) / Max(Pow(@/targetBody.GM(), 0.5), 1)
		distMultiple = Pow(10, Round(Log(@distSensitivity, 10) - 0.5))
		distCoeff = Round(@distSensitivity, @distMultiple)

		altThreshold1 = Round(@coeff / 2 + @multiple / 2, @multiple)
		altThreshold2 = Round(@coeff / 40 + @multiple / 20, @multiple / 10)
		altThreshold3 = Round(@coeff / 7500 + 0.5) / 2
		distThreshold1 = @distCoeff / 4

		r1 = @/targetBody.Radius() + @/targetBody.AtmosphereAltitude()
		deltaV = Pow(@/targetBody.GM() / @r1, 0.5) * (Pow(2 * @/sma / (@r1 + @/sma), 0.5) - 1) + Pow(@/targetBody.GM() / @/sma, 0.5) * (1 - Pow(2 * @/r1 / (@r1 + @/sma), 0.5))
	}

	DATA
	{
		type = long

		intAlt = Round(@/sma - @/targetBody.Radius())
		kmDistThreshold1 = Round(@/distThreshold1 / 1000)
	}

	BEHAVIOUR
	{
		name = SpawnVessel
		type = SpawnVessel

		VESSEL
		{
			name = KSO Relay Marker A
			craftPart = constellations-dummy
			owned = False
			targetBody = HomeWorld()
			vesselType = DroppedPart

			// hardcoded to be exactly above the KSC
			ORBIT = CreateOrbit([@/sma, 1.0E-11, 0, 237.38459898406168, 0, 1.5322871042446775, 18545.434569902998], 1)
		}
	}

	PARAMETER
	{
		name = Relay
		type = VesselParameterGroup

		define = KSO Relay A

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = HasAntenna
			type = HasAntenna
			minAntennaPower = 25000000000 // 25G
			antennaType = RELAY
			notes = This will probably require multiple antennas, remember that combining antennas is non-linear.\nAlso note that difficulty settings alters the antenna power, so there might be a mismatch between antenna ratings shown in VAB and the actual power.
		}

		PARAMETER
		{
			name = PowerGenerator
			type = Any
			title = Have solar panels onboard
			hideChildren = !@Constellations:DEBUG

			PARAMETER
			{
				name = StockSolarGenerator
				type = PartValidation
				partModule = ModuleDeployableSolarPanel
				minCount = 1
			}
		
			PARAMETER:NEEDS[NearFutureSolar]
			{
				name = NFSolarGenerator
				type = PartValidation
				partModule = ModuleCurvedSolarPanel
				minCount = 1
			}
		
			PARAMETER:NEEDS[Kopernicus]
			{
				name = KopernicusSolarGenerator
				type = PartValidation
				partModule = KopernicusSolarPanel
				minCount = 1
			}
		}

		PARAMETER
		{
			name = VesselIsType
			type = VesselIsType
			vesselType = Relay
			disableOnStateChange = false
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit

			title = Circularize at @/intAlt.Print() m with less than @/altThreshold1.ToString("N0") m deviation

			minPeA = Max(0, @/intAlt - @/altThreshold1)
			maxApA = @/intAlt + @/altThreshold1

			maxInclination = 0.049
		}

		PARAMETER
		{
			name = Rendezvous
			type = Rendezvous

			title = Keep the relay within @/kmDistThreshold1.Print() km of the marker

			disableOnStateChange = false

			vessel = KSO Relay Marker A
			distance = @/distThreshold1

			hideChildren = !@Constellations:DEBUG
		}

		PARAMETER
		{
			name = Precision1
			type = VesselParameterGroup

			vessel = KSO Relay A
			title = Circularize at @/intAlt.Print() m with less than @/altThreshold2.ToString("N0") m deviation (Optional)

			optional = True
			rewardReputation = @Constellations:precisionReputation
			rewardFunds = @Constellations:precisionFunds

			hideChildren = !@Constellations:DEBUG

			PARAMETER
			{
				name = Orbit
				type = Orbit

				minPeA = Max(0, @/intAlt - @/altThreshold2)
				maxApA = @/intAlt + @/altThreshold2

				maxInclination = 0.049

				hideChildren = !@Constellations:DEBUG
			}
		}

		PARAMETER
		{
			name = Precision2
			type = VesselParameterGroup

			vessel = KSO Relay A
			title = Circularize at @/intAlt.Print() m with less than @/altThreshold3.ToString("N0") m deviation (Optional)

			optional = True
			rewardReputation = 2 * @Constellations:precisionReputation
			rewardFunds = 2 * @Constellations:precisionFunds

			hideChildren = !@Constellations:DEBUG

			PARAMETER
			{
				name = Orbit
				type = Orbit

				minPeA = Max(0, @/intAlt - @/altThreshold3)
				maxApA = @/intAlt + @/altThreshold3

				maxInclination = 0.049

				hideChildren = !@Constellations:DEBUG
			}
		}

		duration = 1d
	}

	BEHAVIOUR
	{
		name = DestroyVessel
		type = DestroyVessel
		onState = CONTRACT_COMPLETED
		vessel = KSO Relay Marker A
	}
}
